<diagram program="umletino" version="14.2"><zoom_level>10</zoom_level><help_text>Supplies a</help_text><element><id>UMLClass</id><coordinates><x>30</x><y>99</y><w>100</w><h>30</h></coordinates><panel_attributes>Flight(เทียวบิน)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>290</x><y>99</y><w>100</w><h>30</h></coordinates><panel_attributes>Seat</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>120</x><y>99</y><w>190</w><h>40</h></coordinates><panel_attributes>Contains &gt;</panel_attributes><additional_attributes>10;20;170;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>30</x><y>159</y><w>100</w><h>30</h></coordinates><panel_attributes>Customer</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>290</x><y>159</y><w>100</w><h>30</h></coordinates><panel_attributes>Reservation</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>120</x><y>159</y><w>190</w><h>50</h></coordinates><panel_attributes>lt=-
m1=1
m2=1..n
make a &gt;</panel_attributes><additional_attributes>10;20;170;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>30</x><y>239</y><w>100</w><h>30</h></coordinates><panel_attributes>Pilot</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>270</x><y>229</y><w>140</w><h>30</h></coordinates><panel_attributes>self associating class</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>30</x><y>9</y><w>720</w><h>70</h></coordinates><panel_attributes>Association
When one class refers to or uses another class</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1060</x><y>0</y><w>180</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-
a rose is a rose</panel_attributes><additional_attributes>30;40;80;50;70;10;10;10;10;30</additional_attributes></element><element><id>Relation</id><coordinates><x>80</x><y>200</y><w>190</w><h>90</h></coordinates><panel_attributes>manage co pilot
m1=1
m2=1</panel_attributes><additional_attributes>50;60;90;60;90;10;10;10;10;40</additional_attributes></element><element><id>UMLNote</id><coordinates><x>30</x><y>300</y><w>720</w><h>70</h></coordinates><panel_attributes>Inheritance
When multiple classes share some of the same operations and attributes, a base class can encapsulate
the commonality. The child class then inherits from the base class.</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>300</x><y>390</y><w>100</w><h>30</h></coordinates><panel_attributes>Customer</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>160</x><y>490</y><w>160</w><h>30</h></coordinates><panel_attributes>Retail Customer</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>490</y><w>150</w><h>30</h></coordinates><panel_attributes>Coporate Customer</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>230</x><y>410</y><w>130</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;inherits&gt;&gt;</panel_attributes><additional_attributes>110;10;110;40;10;40;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>340</x><y>410</y><w>120</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;inherits&gt;&gt;</panel_attributes><additional_attributes>10;10;10;40;100;40;100;80</additional_attributes></element><element><id>UMLNote</id><coordinates><x>30</x><y>550</y><w>720</w><h>70</h></coordinates><panel_attributes>Aggregation
When a class is formed by a composition(ส่วนประกอบ) of other classes, they are classified as an aggregation.</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>70</x><y>740</y><w>100</w><h>30</h></coordinates><panel_attributes>Plane</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>240</x><y>690</y><w>100</w><h>30</h></coordinates><panel_attributes>Fuel system</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>240</x><y>780</y><w>100</w><h>30</h></coordinates><panel_attributes>Engine</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>430</x><y>650</y><w>100</w><h>30</h></coordinates><panel_attributes>Fuel Pump</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>430</x><y>720</y><w>100</w><h>30</h></coordinates><panel_attributes>Fuel Filter</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>160</x><y>690</y><w>100</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;60;30;60;30;10;80;10</additional_attributes></element><element><id>Relation</id><coordinates><x>160</x><y>750</y><w>100</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;30;10;30;50;80;50</additional_attributes></element><element><id>Relation</id><coordinates><x>330</x><y>650</y><w>120</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;50;40;50;40;10;100;10</additional_attributes></element><element><id>Relation</id><coordinates><x>330</x><y>700</y><w>120</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;40;10;40;40;100;40</additional_attributes></element><element><id>UMLNote</id><coordinates><x>40</x><y>840</y><w>710</w><h>150</h></coordinates><panel_attributes>Association Classes
As the classes and the associations for a program are developed, there may be a situation where an
attribute can’t be assigned to any one class but is a result of an association between classes. For example,
the parts inventory application mentioned previously may have a Part class and a Supplier class.
Because a part can have more than one supplier and the supplier supplies more than one part, where
should the price attribute be located? It does not fit nicely as an attribute for either class, and it should
not be duplicated in both classes. The solution is to develop an association class that manages the data
that is a product of the association. In this case, you would develop a Part Price class. The relationship is
modeled with a dashed line drawn between the association and the association class,</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>180</x><y>1030</y><w>100</w><h>30</h></coordinates><panel_attributes>Supplier</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>430</x><y>1030</y><w>100</w><h>30</h></coordinates><panel_attributes>Part</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>270</x><y>1020</y><w>180</w><h>50</h></coordinates><panel_attributes>lt=-
m1=1..n
m2=n..1
Suppliers a &gt;</panel_attributes><additional_attributes>10;20;160;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>300</x><y>1100</y><w>100</w><h>30</h></coordinates><panel_attributes>Part Price</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>340</x><y>1030</y><w>30</w><h>90</h></coordinates><panel_attributes>lt=..</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element></diagram>