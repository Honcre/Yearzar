//Loaders work at the individual file level during or before the bundle is generated.
//Loaders ใช้ร่วมกับ webpack ในการ generate code modules dependencies จาก js หลายๆ file เป็น bundle.js
//Loaders เช่น babel-loader ใช้ complie es6 syntax ในขณะที่ webpack generate code,css-loader   
//Plugin ใช้เสริมการทำงานของ webpack เช่น uglifyjs-webpack-plugin ใช่ minify javascript code ที่ webpack  generate
//Extract-text-webpack-plugin.use this plug-in to extract the styles code as generated by the css-loader and extract it to a physical CSS file
//uglifyjs - webpack - plugin is used to minify JavaScript code
const path = require('path'); 
const webpack = require('webpack');
const ExtractTextPlugin = require('extract-text-webpack-plugin');
const extractCSS = new ExtractTextPlugin('allstyles.css');
const UglifyJsPlugin = require('uglifyjs-webpack-plugin')

module.exports = {
    entry:
        {
            'main-client': './wwwroot/source/app-react.js'
        },
    output: {
        path: path.resolve(__dirname, 'wwwroot/dist'),
        filename: 'bundle_react.js',
        publicPath: '/dist/'
    },
    plugins: [
        //extractCSS,
        new webpack.ProvidePlugin({
            $: 'jquery',
            jQuery: 'jquery',
            'window.jQuery': 'jquery',//object are list of Key:Value(dictionary)  access o["window.jQuery"]
            Popper: ['popper.js', 'default'],
        }),
        new UglifyJsPlugin()
    ],
    module: {
        rules: [
            //{
            //    test: /\.css$/,
            //    use: extractCSS.extract({
            //        fallback: "style-loader",
            //        use: ['css-loader?minimize'],
            //    })
            //},
            {
                test: /\.css$/,
                use: [{ loader: "style-loader" }, { loader: "css-loader" }]
            },
            {
            test: /\.js?$/,
            use: {
                loader: 'babel-loader',
                options: {
                    presets:['env','react'],
                },
            },
            },
        ],
    },
};